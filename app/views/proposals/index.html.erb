<% @extend = true %>
<% @page_head = '' %>
<% @page_head += @group.name + " - " if @group %>
<% if @category
     @page_head += t('pages.proposals.index.title_with_category', :category => @category.description)
   else
     @page_head += t('pages.proposals.index.title')
   end %>
<% @page_head += " #{t('pages.proposals.index.in_group_area_title')} #{@group_area.name}" if @group_area %>

<% @page_title = @page_head %>

<% if @group %>
    <%= content_for :head do %>
        <meta property="og:title" content="<%= @group.name %>"/>
        <meta property="og:type" content="airesis:group"/>
        <meta property="og:image" content="<%= if !@group.image_url.blank?
                                                 @group.image_url
                                               else
                                                 "#{request.protocol}#{request.host_with_port}#{asset_path("gruppo-anonimo.png")}"
                                               end %>
                                          "/>
        <meta property="og:description" content="<%= @group.description %>"/>
    <% end %>
<% end %>

<%= render :layout => "layouts/page_title", :locals => {:title => @page_head} do %>

<% end %>

<div style="clear:both"></div>


<div id="tabs">
  <ul>
    <% if ::Configuration.phases_active %>
        <li>
          <%= link_to t('pages.proposals.index.debate_title', :count => @in_valutation_count), tab_list_proposals_path(params.merge({:scroll => true, :state => ProposalState::TAB_DEBATE, :group_id => (@group.id if @group), :group_area_id => (@group_area.id if @group_area)})), :class => "status_title", :id => 'dibattito', :title => t("pages.proposals.index.debate") %>
          <div class="tabs-triangle"/>
        </li>
        <li>
          <%= link_to t('pages.proposals.index.voting_title', :count => @in_votation_count), tab_list_proposals_path(params.merge({:scroll => true, :state => ProposalState::TAB_VOTATION, :group_id => (@group.id if @group), :group_area_id => (@group_area.id if @group_area)})), :class => "status_title", :id => 'votazione', :title => t("pages.proposals.index.voting") %>
          <div class="tabs-triangle"/>
        </li>
        <li>
          <%= link_to t('pages.proposals.index.accepted_title', :count => @accepted_count), tab_list_proposals_path(params.merge({:scroll => true, :state => ProposalState::TAB_VOTED, :group_id => (@group.id if @group), :group_area_id => (@group_area.id if @group_area)})), :class => "status_title", :id => 'accettate', :title => t("pages.proposals.index.accepted") %>
          <div class="tabs-triangle"/>
        </li>
        <li>
          <%= link_to t('pages.proposals.index.revision_title', :count => @revision_count), tab_list_proposals_path(params.merge({:scroll => true, :state => ProposalState::TAB_REVISION, :group_id => (@group.id if @group), :group_area_id => (@group_area.id if @group_area)})), :class => "status_title", :id => 'revisione', :title => t("pages.proposals.index.revision") %>
          <div class="tabs-triangle"/>
        </li>
    <% else %>
        <li>
          <%= link_to t('pages.proposals.index.last_title'), tab_list_proposals_path(:scroll => true, :view => ORDER_BY_DATE, :category => params[:category], type: params[:type], :group_id => params[:group_id], :group_area_id => (@group_area.id if @group_area)), :class => "status_title", :id => 'ultime', :title => t("pages.proposals.index.last") %>
          <div class="tabs-triangle"/>
        </li>
        <li>
          <%= link_to t('pages.proposals.index.most_popular_title'), tab_list_proposals_path(:scroll => true, :view => ORDER_BY_RANK, :category => params[:category], type: params[:type], :group_id => params[:group_id], :group_area_id => (@group_area.id if @group_area)), :class => "status_title", :id => 'popolari', :title => t("pages.proposals.index.most_popular") %>
          <div class="tabs-triangle"/>
        </li>
        <li>
          <%= link_to t('pages.proposals.index.most_voted_title'), tab_list_proposals_path(:scroll => true, :view => ORDER_BY_VOTES, :category => params[:category], type: params[:type], :group_id => params[:group_id], :group_area_id => (@group_area.id if @group_area)), :class => "status_title", :id => 'valutate', :title => t("pages.proposals.index.most_valutated") %>
          <div class="tabs-triangle"/>
        </li>
    <% end %>
  </ul>

  <div id="<%= ::Configuration.phases_active ? t("pages.proposals.index.debate").gsub(/\s/, '_') : t('pages.proposals.index.last_title').gsub(/\s/, '_') %>">
    <div id='loading_borders' style='margin:auto;text-align:center;display:block;'>
      <%= image_tag 'ajax-loader.gif', :alt => t('pages.proposals.index.loading_alt') %>
      <br/>
      <b><%= t('pages.proposals.index.loading_proposals') %></b>
    </div>
  </div>
</div>
<% content_for :left_panel do %>

<%= render 'left_panel_index' %>

<% end %>




<script>


    function chooseDates() {
        doModal($('#choose_dates'));
    }


    $(function () {


        var datePickerOptions = {
            buttonImageOnly: true,
            buttonImage: "<%= asset_path('iconCalendar.png') %>",
            showOn: "both",
            changeMonth: false,
            changeYear: false,
            yearRange: "c:c+10",
            maxDate: 0,
            duration: "",
            showTime: true,
            constrainInput: true,
            stepMinute: 5,
            stepHour: 1,
            altTimeField: "alt",
            time24h: true
        }


        $('#time_start').datepicker($.extend({}, datePickerOptions, {
            onClose: function () {
                $('#time_end').focus();

            }
        }));

        $('#time_end').datepicker($.extend({}, datePickerOptions, {
            onClose: function () {
                $(this).form().find('button[name=button]').focus();

            }
        }));


        <%if params[:time] && params[:time][:type]%>
        var selected_ = $('#creation_date .hidden_menu a[data-type=<%=params[:time][:type]%>]');
        <%if params[:time][:type] == 'f'%>
        $('#creation_date .hidden_link b').text("<%=params[:time][:start]%>" + " - <%=params[:time][:end]%>");
        <%else%>
        $('#creation_date .hidden_link b').text(selected_.text());
        <%end%>
        <% else %>
        var selected_ = $('#creation_date .hidden_menu a[data-type=w]');
        $('#creation_date .hidden_link b').text(selected_.text());
        <%end%>
        selected_.addClass('checked');


        $('.hidden_menu')
                .click(function (event) {
                    //event.stopPropagation();
                });

        $('html').click(function () {
            $('.hidden_menu').hide();
            $('.hidden_link.visible').removeClass('visible');
        });

        $('.hidden_link')
                .click(function (event) {
                    $(this).addClass('visible');
                    $(this).next().show().position({
                        my: "right top",
                        at: "right bottom",
                        of: $(this)
                    });
                    event.stopPropagation();
                });
    });


    var menu2show = 1;
    $(".mybox .button").click(function () {
        if ($(this).data('menu2show') == 0) {
            $(this).data('menu2show', 1);
            $(this).parent().find('.mycont').slideDown();
            $(this).removeClass('close');

        } else {
            $(this).data('menu2show', 0);
            $(this).parent().find('.mycont').slideUp();
            $(this).addClass('close');
        }

    });


    $('#nuova_proposta, #nuovo_sondaggio').bind("ajax:error", function (event, data, status, xhr) {
        if (data.status == 401) {
            window.location = "/users/sign_in?l=<%=I18n.locale%>"
        }
    });
    ;

    $('#tabs').tabs({
        cache: true,
        load: function (e, ui) {
            $(ui.panel).find("#loading_borders").remove();

        },
        select: function (e, ui) {
            var $panel = $(ui.panel);
            if ($panel.is(":empty")) {
                $panel.html("<div id='loading_borders' style='margin:auto;text-align:center;display:block;'><%=j (image_tag 'ajax-loader.gif', :alt=>t('pages.proposals.index.loading_alt'))%><br /><b><%= t('pages.proposals.index.loading_proposals')%></b></div>");
            }
            window.location.hash = ui.index;
        }
    });

    $(function() {
        // grab the url
        var url = document.URL;
        // grab the value of the hash
        var hashValue = url.substring(url.indexOf('#')).replace('#', '');

        // check to make sure it is a number
        if (!isNaN(hashValue)) {
            // set the active tab
            $('#tabs').tabs("option", "active", hashValue);
        }
    });


    $(window).resize(function () {
        resizeProposal()
    });
    resizeProposal();

    function resizeProposal(){
        if(window.innerWidth>1500){
            $('#tabs').addClass('twocols');
        }else{
            $('#tabs').removeClass('twocols');
        }
    }
</script>